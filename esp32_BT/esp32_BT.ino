#include <BluetoothSerial.h>
#define LED 33

BluetoothSerial BT;
char dataFlag = 0;

unsigned char allPathData3Line[54] = { 0x23,	0x24,	0x03,	0x01,	0x66,	0x08,	0xd6,	0x07,	0x2d,	0x97,	0x31,	0x01,	0x66,	0x05,	0xb9,	0x07,	0x2d,	0x9b,	0x4d,	0x01,	0x66,	0x05,	0xb9,	0x07,	0x2d,	0x9b,	0x4d,	0x01,	0x66,	0x05,	0x1c,	0x07,	0x2d,	0x93,	0xad,	0x01,	0x66,	0x05,	0x1c,	0x07,	0x2d,	0x93,	0xad,	0x01,	0x66,	0x08,	0xaf,	0x07,	0x2d,	0x96,	0xf7,	0xBD,	0x25,	0x26 };
unsigned char allPathData4Line[70] = {	0x23,	0x24,	0x04,	0x01,	0x67,	0x6b,	0x8d,	0x07,	0x2e,	0x2e,	0x0e,	0x01,	0x67,	0x6d,	0xc3,	0x07,	0x2e,	0x2e,	0x04,	0x01,	0x67,	0x6d,	0xc3,	0x07,	0x2e,	0x2e,	0x04,	0x01,	0x67,	0x6d,	0xc3,	0x07,	0x2e,	0x26,	0x89,	0x01,	0x67,	0x6d,	0xc3,	0x07,	0x2e,	0x26,	0x89,	0x01,	0x67,	0x6b,	0x75,	0x07,	0x2e,	0x26,	0x89,	0x01,	0x67,	0x6b,	0x75,	0x07,	0x2e,	0x26,	0x89,	0x01,	0x67,	0x6b,	0x75,	0x07,	0x2e,	0x2d,	0xb9,	0x48,	0x25,	0x26 };

int dataIndex = 0;
unsigned char offsetData[18][32] = {
  {	0xAA, 0x01,	0x66,	0x0A,	0x68,	0x07,	0x2D,	0xA1,	0x80,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFD,	0x0B,	0x11,	0xFF,	0xFF,	0xC4,	0x55 },
  {	0xAA,	0x01,	0x66,	0x0A,	0xA8,	0x07,	0x2D,	0xA1,	0xC0,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0xE8,	0x11,	0xFF,	0xFF,	0xA6,	0x55 },
  {	0xAA,	0x01,	0x66,	0x0A,	0xEC,	0x07,	0x2D,	0xA1,	0xE8,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x42,	0x11,	0xFF,	0xFF,	0x60,	0x55 },
  {	0xAA,	0x01,	0x66,	0x0B,	0x2C,	0x07,	0x2D,	0xA2,	0x28,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x2C,	0x11,	0xFF,	0xFF,	0x0C,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0B,	0x80,	0x07,	0x2D,	0xA2,	0x68,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x5A,	0x11,	0xFF,	0xFF,	0x96,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0B,	0xC4,	0x07,	0x2D,	0xA2,	0xA8,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x13,	0x11,	0xFF,	0xFF,	0x5B,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0C,	0x04,	0x07,	0x2D,	0xA2,	0xE8,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x68,	0x11,	0xFF,	0xFF,	0xA7,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0C,	0x4A,	0x07,	0x2D,	0xA3,	0x28,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x14,	0x11,	0xFF,	0xFF,	0x54,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0C,	0x8C,	0x07,	0x2D,	0xA3,	0x68,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x69,	0x11,	0xFF,	0xFF,	0xAF,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0C,	0xCC,	0x07,	0x2D,	0xA3,	0xA8,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0xA5,	0x11,	0xFF,	0xFF,	0xE3,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0D,	0x22,	0x07,	0x2D,	0xA3,	0xD0,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFB,	0x92,	0x11,	0xFF,	0xFF,	0x44,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0D,	0x62,	0x07,	0x2D,	0xA4,	0x28,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x3A,	0x11,	0xFF,	0xFF,	0x54,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0D,	0xA8,	0x07,	0x2D,	0xA4,	0x68,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x6A,	0x11,	0xFF,	0xFF,	0x8E,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0D,	0xEA,	0x07,	0x2D,	0xA4,	0xA8,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFC,	0x3B,	0x11,	0xFF,	0xFF,	0x5D,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0E,	0x2A,	0x07,	0x2D,	0xA4,	0xD0,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFB,	0xBA,	0x11,	0xFF,	0xFF,	0x60,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0E,	0x70,	0x07,	0x2D,	0xA5,	0x10,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFB,	0xD2,	0x11,	0xFF,	0xFF,	0x93,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0E,	0xC2,	0x07,	0x2D,	0xA5,	0x50,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFB,	0xA0,	0x11,	0xFF,	0xFF,	0x13,	0x55 },																															
  {	0xAA,	0x01,	0x66,	0x0F, 0x08,	0x07,	0x2D,	0xA5,	0x90,	0x01,	0x66,	0x0B,	0x57,	0x07,	0x2D,	0xA2,	0xC6,	0x01,	0x66,	0x0C,	0xBE,	0x07,	0x2D,	0xA4,	0x03,	0xFB,	0xD1,	0x11,	0xFF,	0xFF,	0x69,	0x55 },
};

void setup() {
  Serial.begin(115200);
  BT.begin("ESPBT");
  pinMode(LED, OUTPUT);
}

void loop() {
  switch(dataFlag){
    case 0:
      BT.write(allPathData3Line, sizeof(allPathData3Line));//傳輸給藍牙
      break;
    case 1:
      BT.write(offsetData[dataIndex], sizeof(offsetData[dataIndex]));//傳輸給藍牙
      if(dataIndex + 1 == 18) dataIndex = 0;
      else dataIndex++;
      break;
  }

  digitalWrite(LED, 1);
  delay(30);
  digitalWrite(LED, 0);
  delay(70);


  if (BT.available()) {
    byte packet[2]; // 建立一個byte型別的陣列，用於儲存接收到的封包
    
    for (int i = 0; i < 2; i++) {
      packet[i] = BT.read(); // 逐一讀取兩個byte的封包
    }

    Serial.print("Received packet: ");
    for (int i = 0; i < 2; i++) {
      Serial.print(packet[i], HEX);
      Serial.print(" ");
    }
    Serial.println();

    dataFlag = 1;
  }
}